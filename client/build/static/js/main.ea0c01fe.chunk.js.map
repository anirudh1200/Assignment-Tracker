{"version":3,"sources":["components/layout/Navbar.js","components/submissions/Summary.js","store/actions/submissionActions.js","socket/socket.js","components/dashboard/Dashboard.js","components/layout/SideDrawer.js","components/layout/Backdrop.js","components/submissions/Details.js","components/submissions/CreateNew.js","components/submissions/Edit.js","components/dashboard/prevDashboard.js","App.js","serviceWorker.js","store/reducers/SubmissionReducer.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","style","marginLeft","onClick","click","Link","to","Summary","submission","submissionDate","inputDate","y","slice","m","formatDate","date","todayWarning","Date","todayDate","getDate","getMonth","getFullYear","borderLeft","_id","key","title","subject","time","onEdit","color","display","marginTop","id","onDelete","deleteSubmission","dispatch","type","axios","delete","concat","then","res","sendUpdatePing","socket","emit","Dashboard","handleDelete","e","window","confirm","_this","target","handleEdit","redirectEdit","path","history","push","_this2","this","setTimeout","getItems","on","nextProps","nextState","submissions","localStorage","setItem","JSON","stringify","_this3","map","submissions_Summary","now","Component","connect","state","today","filter","get","data","SideDrawer","drawerClasses","show","margin","fontFamily","closeit","NavLink","Backdrop","Details","redirectHome","undefined","dateCreated","content","author","width","ownProps","match","params","find","deletePost","CreateNew","handleChange","setState","Object","defineProperty","value","handleSubmit","preventDefault","addSubmission","onSubmit","backgroundColor","htmlFor","onChange","defaultValue","post","Edit","handleEditSubmit","editSubmission","placeholder","put","prevDashboard","prevSubmissions","length","getItem","parse","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","backdrop","components_layout_Backdrop","BrowserRouter","layout_Navbar","Switch","Route","exact","component","components_layout_SideDrawer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","savedData","initState","loading","socketIOClient","SubmissionReducer","arguments","action","objectSpread","toConsumableArray","newSubmissions","editedSubmissions","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registeration","scope"],"mappings":"+MAceA,EAXA,SAAAC,GACX,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBC,MAAO,CAACC,WAAY,MAAOC,QAASP,EAAMQ,OAA7E,QACAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIN,UAAU,qBAAvB,4CCmCDO,EAjCC,SAAAX,GAAS,IACbY,EAAeZ,EAAfY,WACFC,EATS,SAACC,GAChB,IAAMC,EAAID,EAAUE,MAAM,EAAE,GACtBC,EAAIH,EAAUE,MAAM,EAAE,GAE5B,OADUF,EAAUE,MAAM,EAAE,IACnB,IAAIC,EAAE,IAAIF,EAKIG,CAAWN,EAAWO,MACzCC,EAAe,KACbD,EAAO,IAAIE,KAAKT,EAAWO,MAC3BG,EAAY,IAAID,KAAKrB,EAAMmB,MAMjC,OALGA,EAAKI,YAAcD,EAAUC,WAAaJ,EAAKK,aAAeF,EAAUE,YAAcL,EAAKM,gBAAkBH,EAAUG,cACtHL,EAAe,CAACM,WAAY,iBACtBP,EAAKI,YAAcD,EAAUC,UAAU,GAAKJ,EAAKK,aAAeF,EAAUE,YAAcL,EAAKM,gBAAkBH,EAAUG,gBAC/HL,EAAe,CAACM,WAAY,qBAG5BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,MAAOe,GACxBnB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,eAAiBE,EAAWe,IAAMf,WAAaA,EAAagB,IAAMhB,EAAWe,KACpF1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAAgCQ,EAAWiB,MAA3C,KACA5B,EAAAC,EAAAC,cAAA,qBAAcS,EAAWkB,SACzB7B,EAAAC,EAAAC,cAAA,kBAAWU,GACXZ,EAAAC,EAAAC,cAAA,kBAAWS,EAAWmB,SAIlC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBG,QAAUP,EAAMgC,OAAS3B,MAAO,CAAC4B,MAAO,QAASC,QAAS,QAASC,UAAW,OAAQC,GAAKxB,EAAWe,KAA3I,QACA1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBG,QAAUP,EAAMqC,SAAWhC,MAAO,CAAC4B,MAAO,QAASC,QAAS,QAASC,UAAW,OAAQC,GAAKxB,EAAWe,KAA7I,sCCvBPW,EAAmB,SAACF,GAC7B,OAAO,SAACG,GACJA,EAAS,CAACC,KAAM,kBAChBC,IACKC,OADL,oBAAAC,OACgCP,IAC3BQ,KAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBC,KAAM,oBACNJ,WCdDU,EANQ,SAACC,GACpBA,EAAOC,KAAK,WAAY,WACpB,OAAO,KCITC,6MAEFC,aAAe,SAAAC,GACRC,OAAOC,QAAQ,0CACdC,EAAKtD,MAAMsC,iBAAiBa,EAAEI,OAAOnB,IAEzCU,EAAeQ,EAAKtD,MAAM+C,WAG9BS,WAAa,SAAAL,GACTG,EAAKG,aAAaN,EAAEI,OAAOnB,OAG/BqB,aAAe,SAAArB,GACX,IAAIsB,EAAO,SAAWtB,EACtBkB,EAAKtD,MAAM2D,QAAQC,KAAKF,uFAGT,IAAAG,EAAAC,KACfC,WAAWD,KAAK9D,MAAMgE,SAAU,KAChCF,KAAK9D,MAAM+C,OAAOkB,GAAG,gBAAiB,WAClCF,WAAWF,EAAK7D,MAAMgE,SAAU,mDAIpBE,EAAWC,GACxBD,EAAUE,YAAY,IACrBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAAUE,+CAItD,IAAAK,EAAAX,KACIM,EAAgBN,KAAK9D,MAArBoE,YACR,OACInE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVgE,EAAYM,IAAI,SAAA9D,GACb,OACIX,EAAAC,EAAAC,cAACwE,EAAD,CAAStC,SAAUoC,EAAKvB,aAAclB,OAAQyC,EAAKjB,WAAY5C,WAAYA,EAAYgB,IAAKhB,EAAWe,IAAKR,KAAM,IAAIE,KAAKA,KAAKuD,oBAtCpIC,aAkETC,cAnBS,SAACC,GACrB,IAAMC,EAAQ,IAAI3D,KAAKA,KAAKuD,OAK5B,MAAM,CACFR,YALwBW,EAAMX,YAAYa,OAAO,SAAArE,GAEjD,OADa,IAAIS,KAAKT,EAAWO,OAClB6D,IAIfjC,OAAQgC,EAAMhC,SAIK,SAACR,GACxB,MAAM,CACFyB,SAAU,kBAAMzB,EFzCb,SAACA,GACJA,EAAS,CAACC,KAAM,kBAChBC,IACKyC,IAAI,qBACJtC,KAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBC,KAAM,iBACN5B,WAAYiC,EAAIsC,YEoCxB7C,iBAAkB,SAACF,GAAD,OAAQG,EAASD,EAAiBF,OAI7C0C,CAA6C7B,YCjD7CmC,SAnBI,SAAApF,GACf,IAAIqF,EAAgB,cAIpB,OAHGrF,EAAMsF,OACLD,EAAgB,oBAGhBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAWiF,GACZpF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASC,MAAO,CAACkF,OAAQ,MAAOtD,MAAO,mBAAoBuD,WAAY,eAArF,cAGAvF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAII,QAASP,EAAMyF,SAASxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAShF,GAAG,KAAZ,kBAC5BT,EAAAC,EAAAC,cAAA,MAAII,QAASP,EAAMyF,SAASxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAShF,GAAG,aAAZ,kBAC5BT,EAAAC,EAAAC,cAAA,MAAII,QAASP,EAAMyF,SAASxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAShF,GAAG,WAAZ,2BCR7BiF,SANE,SAAA3F,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,QAASP,EAAMQ,UCA7CoF,6MAEF1C,aAAe,SAAAC,GACRC,OAAOC,QAAQ,2CACdC,EAAKtD,MAAMsC,iBAAiBa,EAAEI,OAAOnB,IACrCU,EAAeQ,EAAKtD,MAAM+C,QAC1BO,EAAKuC,mBAIbrC,WAAa,SAAAL,GACTG,EAAKG,aAAaN,EAAEI,OAAOnB,OAG/ByD,aAAe,WAEXvC,EAAKtD,MAAM2D,QAAQC,KADX,QAIZH,aAAe,SAAArB,GACX,IAAIsB,EAAO,SAAWtB,EACtBkB,EAAKtD,MAAM2D,QAAQC,KAAKF,MAG5BxC,WAAa,SAACJ,GACV,IAAMC,EAAID,EAAUE,MAAM,EAAE,GACtBC,EAAIH,EAAUE,MAAM,EAAE,GAE5B,OADUF,EAAUE,MAAM,EAAE,IACnB,IAAIC,EAAE,IAAIF,2EAGf,IACIH,EAAekD,KAAK9D,MAApBY,WACR,QAAkBkF,IAAflF,EACC,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,oBAIJ,IAAM2F,EAAcjC,KAAK5C,WAAWN,EAAWmF,aACzClF,EAAiBiD,KAAK5C,WAAWN,EAAWO,MAClD,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcQ,EAAWiB,OACzC5B,EAAAC,EAAAC,cAAA,UAAMS,EAAWoF,SACjB/F,EAAAC,EAAAC,cAAA,uBAAgBS,EAAWkB,SAC3B7B,EAAAC,EAAAC,cAAA,+BAAwBU,GACxBZ,EAAAC,EAAAC,cAAA,oBAAaS,EAAWmB,OAE5B9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAiBS,EAAWqF,QAC5BhG,EAAAC,EAAAC,cAAA,iBAAU4F,KAGlB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sDAAsDG,QAASuD,KAAKN,WAAYnD,MAAO,CAAC6B,QAAS,QAASgE,MAAO,QAAS9D,GAAKxB,EAAWe,KAAM1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,QAAlK,SACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6DAA4DG,QAASuD,KAAKZ,aAAe7C,MAAO,CAAC6B,QAAS,QAASgE,MAAO,OAAQ/D,UAAW,MAAOC,GAAKxB,EAAWe,KAAM1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,UAA5L,oBA1DNyE,aAkFPC,cAhBS,SAACC,EAAOoB,GAC5B,IAAM/D,EAAK+D,EAASC,MAAMC,OAAOjE,GAEjC,MAAM,CACFxB,WAFemE,EAAMX,YAAYkC,KAAK,SAAA1F,GAAU,OAAIA,EAAWe,MAAQS,IAGvEW,OAAQgC,EAAMhC,SAIK,SAACR,GACxB,MAAM,CACFgE,WAAY,SAACnE,GAAD,OAAQG,EAASD,EAAiBF,KAC9CE,iBAAkB,SAACF,GAAD,OAAQG,EAASD,EAAiBF,OAI7C0C,CAA6Cc,WClFtDY,6MAEFzB,MAAQ,CACJlD,MAAO,GACPC,QAAS,GACTX,KAAM,GACNY,KAAM,gBACNiE,QAAS,GACTC,OAAQ,MAGZQ,aAAe,SAAAtD,GACXG,EAAKoD,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKxD,EAAEI,OAAOnB,GAAMe,EAAEI,OAAOsD,WAIjChB,aAAe,WAEXvC,EAAKtD,MAAM2D,QAAQC,KADX,QAIZkD,aAAe,SAAA3D,GACXA,EAAE4D,iBACFzD,EAAKtD,MAAMgH,cAAc1D,EAAKyB,OAC9BjC,EAAeQ,EAAKtD,MAAM+C,QAC1BO,EAAKuC,wFAIL,OACI5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM8G,SAAUnD,KAAKgD,aAAczG,MAAO,CAAC6G,gBAAiB,kBACxDjH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,SAAf,SACAlH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,QAAQgF,SAAUtD,KAAK2C,gBAEjDxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,WAAf,WACAlH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,UAAUgF,SAAUtD,KAAK2C,gBAEnDxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,QAAf,QACAlH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,OAAOgF,SAAUtD,KAAK2C,gBAEhDxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,OAAOE,aAAa,iBAAnC,QACApH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,OAAOiF,aAAa,gBAAgBD,SAAUtD,KAAK2C,gBAE7ExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,WAAf,WACAlH,EAAAC,EAAAC,cAAA,YAAUiC,GAAG,UAAUhC,UAAU,uBAAuBgH,SAAUtD,KAAK2C,gBAE3ExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOgH,QAAQ,UAAf,UACAlH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,SAASiF,aAAa,YAAYD,SAAUtD,KAAK2C,gBAE3ExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,gCA3DAyE,aA+ETC,cANS,SAACC,GACrB,MAAM,CACFhC,OAAQgC,EAAMhC,SARK,SAACR,GACxB,MAAM,CACEyE,cAAe,SAACpG,GAAD,OAAgB2B,ENxEd,SAAC3B,GAC1B,OAAO,SAAC2B,GACJA,EAAS,CAACC,KAAM,kBAChBC,IACK6E,KAAK,oBAAqB1G,GAC1BgC,KAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBC,KAAM,iBAAkB5B,kBMkEYoG,CAAcpG,OAUnDkE,CAA6C0B,GC/EtDe,6MAEFd,aAAe,SAAAtD,GACX,OAAOA,EAAEI,OAAOnB,IACZ,IAAK,QACDkB,EAAKtD,MAAMY,WAAWiB,MAAQsB,EAAEI,OAAOsD,MACvC,MACJ,IAAK,UACDvD,EAAKtD,MAAMY,WAAWkB,QAAUqB,EAAEI,OAAOsD,MACzC,MACJ,IAAK,OACDvD,EAAKtD,MAAMY,WAAWO,KAAOgC,EAAEI,OAAOsD,MACtC,MACJ,IAAK,OACDvD,EAAKtD,MAAMY,WAAWmB,KAAOoB,EAAEI,OAAOsD,MACtC,MACJ,IAAK,UACDvD,EAAKtD,MAAMY,WAAWoF,QAAU7C,EAAEI,OAAOsD,UAMrDW,iBAAmB,SAAArE,GACfA,EAAE4D,iBACFzD,EAAKtD,MAAMyH,eAAenE,EAAKtD,MAAMY,YACrCkC,EAAeQ,EAAKtD,MAAM+C,QAC1BO,EAAKuC,kBAGTA,aAAe,WAEXvC,EAAKtD,MAAM2D,QAAQC,KADR,8EAIP,IACIhD,EAAekD,KAAK9D,MAApBY,WACR,YAAkBkF,IAAflF,EAEKX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,oBAKAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM8G,SAAUnD,KAAK0D,iBAAmBnH,MAAO,CAAC6G,gBAAiB,kBAC7DjH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,QAAQsF,YAAY,OAAOL,aAAczG,EAAWiB,MAAOuF,SAAUtD,KAAK2C,eAChGxG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,UAAUiF,aAAczG,EAAWkB,QAASsF,SAAUtD,KAAK2C,eACjFxG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,OAAOiF,aAAczG,EAAWO,KAAMiG,SAAUtD,KAAK2C,eAC3ExG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOJ,GAAG,OAAOiF,aAAczG,EAAWmB,KAAMqF,SAAUtD,KAAK2C,eAC3ExG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,YAAUiC,GAAG,UAAUiF,aAAczG,EAAWoF,QAAS5F,UAAU,uBAAuBgH,SAAUtD,KAAK2C,eACzGxG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,6BApETyE,aA4FJC,cAfS,SAACC,EAAOoB,GAC5B,IAAM/D,EAAK+D,EAASC,MAAMC,OAAOjE,GAEjC,MAAM,CACFxB,WAFemE,EAAMX,YAAYkC,KAAK,SAAA1F,GAAU,OAAIA,EAAWe,MAAQS,IAGvEW,OAAQgC,EAAMhC,SAIK,SAACR,GACxB,MAAM,CACFkF,eAAgB,SAAC7G,GAAD,OAAgB2B,EPxDV,SAAC3B,GAC3B,OAAO,SAAC2B,GACJA,EAAS,CAACC,KAAM,kBAChBC,IACKkF,IADL,oBAAAhF,OAC6B/B,EAAWe,KAAOf,GAC1CgC,KAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBC,KAAM,kBACNJ,GAAIxB,EAAWe,IACff,kBOgDiC6G,CAAe7G,OAIjDkE,CAA6CyC,GC3FtDK,6MAEF1E,aAAe,SAAAC,GACRC,OAAOC,QAAQ,0CACdC,EAAKtD,MAAMsC,iBAAiBa,EAAEI,OAAOnB,IAEzCU,EAAeQ,EAAKtD,MAAM+C,WAG9BS,WAAa,SAAAL,GACTG,EAAKG,aAAaN,EAAEI,OAAOnB,OAG/BqB,aAAe,SAAArB,GACX,IAAIsB,EAAO,SAAWtB,EACtBkB,EAAKtD,MAAM2D,QAAQC,KAAKF,uFAGRQ,EAAWC,GACxBD,EAAUE,YAAY,IACrBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,EAAUE,+CAI1D,IAAAP,EAAAC,KACIM,EAAgBN,KAAK9D,MAArBoE,YACR,OACInE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVgE,EAAYM,IAAI,SAAA9D,GACb,OACIX,EAAAC,EAAAC,cAACwE,EAAD,CAAStC,SAAUwB,EAAKX,aAAclB,OAAQ6B,EAAKL,WAAY5C,WAAYA,EAAYgB,IAAKhB,EAAWe,iBA/BvGkD,aA+DbC,cAvBS,SAACC,GACrB,IAAMC,EAAQ,IAAI3D,KAAKA,KAAKuD,OACxBiD,EAAkB9C,EAAMX,YAAYa,OAAO,SAAArE,GAE3C,OADa,IAAIS,KAAKT,EAAWO,OAClB6D,IAOnB,OAL8B,IAA3B6C,EAAgBC,QACdzD,aAAa0D,QAAQ,cACtBF,EAAkBtD,KAAKyD,MAAM3D,aAAa0D,QAAQ,cAGhD,CACF3D,YAAayD,EACb9E,OAAQgC,EAAMhC,SAIK,SAACR,GACxB,MAAM,CACFD,iBAAkB,SAACF,GAAD,OAAQG,EAASD,EAAiBF,OAI7C0C,CAA6C8C,GCrB7CK,6MAnCXlD,MAAQ,CACJmD,gBAAgB,KAEpBC,yBAA2B,WACvB7E,EAAKoD,SAAS,SAAC0B,GACX,MAAO,CAACF,gBAAkBE,EAAUF,qBAG5CG,qBAAuB,WACnB/E,EAAKoD,SAAS,CAACwB,gBAAgB,6EAG/B,IAAII,EAIJ,OAHGxE,KAAKiB,MAAMmD,iBACVI,EAAWrI,EAAAC,EAAAC,cAACoI,EAAD,CAAU/H,MAAOsD,KAAKuE,wBAGjCpI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,KACIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACsI,EAAD,CAAQjI,MAAOsD,KAAKqE,2BACpBlI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACIzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOC,OAAK,EAAClF,KAAK,IAAImF,UAAW5F,IACjChD,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOjF,KAAK,kBAAkBmF,UAAWjD,IACzC3F,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOjF,KAAK,UAAUmF,UAAWrC,IACjCvG,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOjF,KAAK,YAAYmF,UAAWtB,IACnCtH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOjF,KAAK,YAAYmF,UAAWjB,KAEvC3H,EAAAC,EAAAC,cAAC2I,EAAD,CAAYxD,KAAMxB,KAAKiB,MAAMmD,eAAgBzC,QAAS3B,KAAKuE,uBAC1DC,WA7BHzD,aCAZkE,EAAcC,QACW,cAA7B5F,OAAO6F,SAASC,UAEe,UAA7B9F,OAAO6F,SAASC,UAEhB9F,OAAO6F,SAASC,SAAS9C,MACvB,2DAwCN,SAAS+C,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTxG,KAAK,SAAA6G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5E,QACfuE,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,kDChG7DC,EAAY,GAEbhG,aAAa0D,QAAQ,UACpBsC,EAAY9F,KAAKyD,MAAM3D,aAAa0D,QAAQ,UAGhD,IAAMuC,EAAY,CACdlG,YAAaiG,EACbE,SAAS,EAITxH,OAAQyH,IAAe,6CA8CZC,EA3CW,WAA+B,IAA9B1F,EAA8B2F,UAAA5C,OAAA,QAAAhC,IAAA4E,UAAA,GAAAA,UAAA,GAAtBJ,EAAWK,EAAWD,UAAA5C,OAAA,EAAA4C,UAAA,QAAA5E,EACrD,OAAO6E,EAAOnI,MACV,IAAK,iBACD,OAAAmE,OAAAiE,EAAA,EAAAjE,CAAA,GACO5B,EADP,CAEIX,YAAauG,EAAO/J,WACpB2J,SAAS,IAEjB,IAAK,iBACD,OAAA5D,OAAAiE,EAAA,EAAAjE,CAAA,GACO5B,EADP,CAEIX,YAAYuC,OAAAkE,EAAA,EAAAlE,CAAK5B,EAAMX,aAAZzB,OAAA,CAAyBgI,EAAO/J,aAC3C2J,SAAS,IAEjB,IAAK,oBACD,IAAIO,EAAiB/F,EAAMX,YAAYa,OAAO,SAAArE,GAC1C,OAAO+J,EAAOvI,KAAOxB,EAAWe,MAEpC,OAAOgF,OAAAiE,EAAA,EAAAjE,CAAA,GACA5B,EADP,CAEIX,YAAa0G,EACbP,SAAS,IAEjB,IAAK,kBACD,IAAIQ,EAAoBhG,EAAMX,YAAYa,OAAO,SAAArE,GAC7C,OAAO+J,EAAOvI,KAAOxB,EAAWe,MAEpC,OAAOgF,OAAAiE,EAAA,EAAAjE,CAAA,GACA5B,EADP,CAEIX,YAAa,CAAC2G,EAAmBJ,EAAO/J,YACxC2J,SAAS,IAEjB,IAAK,gBACD,OAAA5D,OAAAiE,EAAA,EAAAjE,CAAA,GACO5B,EADP,CAEIwF,SAAS,IAEjB,QAEI,OADAR,QAAQC,IAAI,oBACLjF,YC/CbiG,EAAQC,YAAYR,EACtBS,YACIC,YAAgBC,OAIxBC,IAASC,OAAOrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUP,MAAOA,GAAO/K,EAAAC,EAAAC,cAACqL,EAAD,OAAoBC,SAASC,eAAe,SFO7E,SAAkBrC,GAEvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqC,IAAIC,GAAwBxI,OAAO6F,SAAS4C,MACpDC,SAAW1I,OAAO6F,SAAS6C,OAIvC,OAGF1I,OAAO2I,iBAAiB,OAAQ,WAC9B,IAAM3C,EAAK,GAAAzG,OAAMiJ,GAAN,6BAEP7C,GAiEV,SAAiCK,EAAOC,GAEtC2C,MAAM5C,GACHxG,KAAK,SAAAqJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQjH,IAAI,gBAEnB,MAApB+G,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/C,UAAUC,cAAc+C,MAAM1J,KAAK,SAAA6G,GACjCA,EAAa8C,aAAa3J,KAAK,WAC7BQ,OAAO6F,SAASuD,aAKpBrD,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEAtFAyC,CAAwBrD,EAAOC,GAI/BC,UAAUC,cAAc+C,MAAM1J,KAAK,SAAC8J,GAClC3C,QAAQC,IACN,4GAGFD,QAAQC,IAAI0C,EAAcC,UAI5BxD,EAAgBC,EAAOC,MEhC/BE","file":"static/js/main.ea0c01fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n    return(\n        <nav>\n            <div className=\"nav-wrapper grey darken-4\">\n                <i className=\"material-icons left\" style={{marginLeft: \"3%\"}} onClick={props.click}>menu</i>\n                <Link to=\"/\" className=\"brand-logo center\">YeDivision</Link>\n            </div>\n      </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst formatDate = (inputDate) => {\n    const y = inputDate.slice(0,4);\n    const m = inputDate.slice(5,7);\n    const d = inputDate.slice(8,10);\n    return d+'-'+m+'-'+y;\n}\n\nconst Summary = props => {\n    const { submission } = props;\n    const submissionDate = formatDate(submission.date);\n    let todayWarning = null;\n    const date = new Date(submission.date);\n    const todayDate = new Date(props.date);\n    if(date.getDate() === todayDate.getDate() && date.getMonth() === todayDate.getMonth() && date.getFullYear() === todayDate.getFullYear()){\n        todayWarning = {borderLeft: \"6px solid red\"};\n    } else if(date.getDate() === todayDate.getDate()+1 && date.getMonth() === todayDate.getMonth() && date.getFullYear() === todayDate.getFullYear()){\n        todayWarning = {borderLeft: \"6px solid yellow\"};\n    }\n    return(\n        <div className=\"card z-depth-2 submission-summary\">\n            <div className=\"row\" style={todayWarning}>\n                <Link to={ '/submission/' + submission._id } submission={ submission } key={ submission._id }>\n                    <div className=\"col s9\">\n                        <div className=\"card-content grey-text text-darken-4\">\n                            <span className=\"card-title\"> { submission.title } </span>\n                            <p>Subject: { submission.subject }</p>\n                            <p>Date: { submissionDate }</p>\n                            <p>Time: { submission.time }</p>\n                        </div>\n                    </div>\n                </Link>\n                <div className=\"col s3\">\n                    <i className=\"material-icons center\" onClick={ props.onEdit } style={{color: \"black\", display: \"block\", marginTop: \"50%\"}} id={ submission._id }>edit</i>\n                    <i className=\"material-icons center\" onClick={ props.onDelete } style={{color: \"black\", display: \"block\", marginTop: \"30%\"}} id={ submission._id }>delete</i>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Summary;\n","import axios from 'axios';\n\nexport const addSubmission = (submission) => {\n    return (dispatch) => {\n        dispatch({type: \"ITEMS_LOADING\"});\n        axios\n            .post('/api/submissions/', submission)\n            .then(res => dispatch({\n                type: 'ADD_SUBMISSION', submission\n            }))\n    }\n}\n\nexport const deleteSubmission = (id) => {\n    return (dispatch) => {\n        dispatch({type: \"ITEMS_LOADING\"});\n        axios\n            .delete(`/api/submissions/${id}`)\n            .then(res => dispatch({\n                type: \"DELETE_SUBMISSION\",\n                id\n            }))\n    }\n}\n\nexport const getItems = () => {\n    return (dispatch) => {\n        dispatch({type: \"ITEMS_LOADING\"});\n        axios\n            .get('/api/submissions/')\n            .then(res => dispatch({\n                type: \"GET_SUBMISSION\",\n                submission: res.data\n            }))\n    }\n}\n\nexport const editSubmission = (submission) => {\n    return (dispatch) => {\n        dispatch({type: \"ITEMS_LOADING\"});\n        axios\n            .put(`/api/submissions/${submission._id}`, submission)\n            .then(res => dispatch({\n                type: 'EDIT_SUBMISSION',\n                id: submission._id,\n                submission\n            }))\n    }\n}\n","const sendUpdatePing = (socket) => {\n    socket.emit('toUpdate', () => {\n        return false;\n    });\n}\n\nexport default sendUpdatePing;\n","import React, { Component } from 'react';\nimport Summary from '../submissions/Summary';\nimport { connect } from 'react-redux';\nimport { getItems, deleteSubmission } from '../../store/actions/submissionActions';\nimport sendUpdatePing from '../../socket/socket';\n\nclass Dashboard extends Component{\n\n    handleDelete = e => {\n        if(window.confirm(\"Are you sure you want to delete this?\")){\n            this.props.deleteSubmission(e.target.id);\n        }\n        sendUpdatePing(this.props.socket);\n    }\n\n    handleEdit = e => {\n        this.redirectEdit(e.target.id);\n    }\n\n    redirectEdit = id => {\n        let path = `/edit/` + id;\n        this.props.history.push(path);\n    }\n\n    componentDidMount(){\n        setTimeout(this.props.getItems, 500);\n        this.props.socket.on('processUpdate', () => {\n            setTimeout(this.props.getItems, 1000);\n        });\n    }\n\n    componentWillUpdate(nextProps, nextState){\n        if(nextProps.submissions[0]){\n            localStorage.setItem('data', JSON.stringify(nextProps.submissions));\n        }\n    }\n\n    render(){\n        const { submissions } = this.props;\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"project-list section\">\n                    {submissions.map(submission => {\n                        return(\n                            <Summary onDelete={this.handleDelete} onEdit={this.handleEdit} submission={submission} key={submission._id} date={new Date(Date.now())} />\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const today = new Date(Date.now());\n    const upcomingSubmissions = state.submissions.filter(submission => {\n        const date = new Date(submission.date)\n        return date >= today\n    });\n    return{\n        submissions: upcomingSubmissions,\n        socket: state.socket\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        getItems: () => dispatch(getItems()),\n        deleteSubmission: (id) => dispatch(deleteSubmission(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    let drawerClasses = 'side-drawer';\n    if(props.show){\n        drawerClasses = 'side-drawer open';\n    }\n    return(\n        <nav className={drawerClasses}>\n            <h4 className=\"center\" style={{margin: \"15%\", color: \"rgb(100,100,100)\", fontFamily: \"Montserrat\"}}>\n                YeDivision\n            </h4>\n            <ul>\n                <li onClick={props.closeit}><NavLink to=\"/\">View Upcoming</NavLink></li>\n                <li onClick={props.closeit}><NavLink to=\"/previous\">View Previous</NavLink></li>\n                <li onClick={props.closeit}><NavLink to=\"/create\">Add New Submission</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default SideDrawer;\n","import React from 'react';\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n    return(\n        <div className=\"mybackdrop\" onClick={props.click}></div>\n    )\n}\n\nexport default Backdrop;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport sendUpdatePing from '../../socket/socket';\nimport { deleteSubmission } from '../../store/actions/submissionActions';\n\nclass Details extends Component{\n\n    handleDelete = e => {\n        if(window.confirm(\"Are you sure you want to delete this?\")){\n            this.props.deleteSubmission(e.target.id);\n            sendUpdatePing(this.props.socket);\n            this.redirectHome();\n        }\n    }\n\n    handleEdit = e => {\n        this.redirectEdit(e.target.id);\n    }\n\n    redirectHome = () => {\n        let path = `/`;\n        this.props.history.push(path);\n    }\n\n    redirectEdit = id => {\n        let path = `/edit/` + id;\n        this.props.history.push(path);\n    }\n\n    formatDate = (inputDate) => {\n        const y = inputDate.slice(0,4);\n        const m = inputDate.slice(5,7);\n        const d = inputDate.slice(8,10);\n        return d+'/'+m+'/'+y;\n    }\n\n    render(){\n        const { submission } = this.props;\n        if(submission === undefined){\n            return(\n                <div className=\"center\"> Page Not Found </div>\n            )\n        }\n        else{\n            const dateCreated = this.formatDate(submission.dateCreated);\n            const submissionDate = this.formatDate(submission.date);\n            return(\n                <div className=\"container section project-details\">\n                        <div className=\"card z-depth-1\">\n                            <div className=\"card-content\">\n                                <span className=\"card-title\">{submission.title}</span>\n                                <h6>{ submission.content }</h6>\n                                <div>Subject: { submission.subject }</div>\n                                <div>Submission Date: { submissionDate }</div>\n                                <div>Time: { submission.time }</div>\n                            </div>\n                            <div className=\"card-action grey lighten-4 grey-text\">\n                                <div>Posted by { submission.author }</div>\n                                <div>on { dateCreated }</div>\n                            </div>\n                        </div>\n                        <div className=\"center\">\n                            <button className=\"btn waves-effect waves-light amber z-depth-1 center\" onClick={this.handleEdit} style={{display: \"block\", width: \"100%\"}} id={ submission._id }><i className=\"material-icons\">edit</i> Edit</button>\n                            <button className=\"btn waves-effect waves-light red darken-2 z-depth-1 center\"onClick={this.handleDelete}  style={{display: \"block\", width: \"100%\", marginTop: \"1%\"}} id={ submission._id }><i className=\"material-icons\">delete</i> Delete</button>\n                        </div>\n                    </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const submission = state.submissions.find(submission => submission._id === id);\n    return{\n        submission,\n        socket: state.socket\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        deletePost: (id) => dispatch(deleteSubmission(id)),\n        deleteSubmission: (id) => dispatch(deleteSubmission(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addSubmission } from '../../store/actions/submissionActions';\nimport sendUpdatePing from '../../socket/socket';\n\nclass CreateNew extends Component{\n\n    state = {\n        title: '',\n        subject: '',\n        date: '',\n        time: 'Not Specified',\n        content: '',\n        author: ''\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    redirectHome = () => {\n        let path = `/`;\n        this.props.history.push(path);\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addSubmission(this.state);\n        sendUpdatePing(this.props.socket);\n        this.redirectHome();\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} style={{backgroundColor: \"rgba(0,0,0,0)\"}}>\n                    <h5 className=\"grey-text text-darken-4 center\">Add New Submission</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"subject\">Subject</label>\n                        <input type=\"text\" id=\"subject\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" id=\"date\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"time\" defaultValue=\"Not Specified\">Time</label>\n                        <input type=\"text\" id=\"time\" defaultValue=\"Not Specified\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"author\">Author</label>\n                        <input type=\"text\" id=\"author\" defaultValue=\"Anonymous\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-1\">Add New Submission</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n            addSubmission: (submission) => dispatch(addSubmission(submission))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        socket: state.socket\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editSubmission } from '../../store/actions/submissionActions';\nimport sendUpdatePing from '../../socket/socket';\n\nclass Edit extends Component{\n\n    handleChange = e => {\n        switch(e.target.id){\n            case 'title':\n                this.props.submission.title = e.target.value;\n                break;\n            case 'subject':\n                this.props.submission.subject = e.target.value;\n                break;\n            case 'date':\n                this.props.submission.date = e.target.value;\n                break;\n            case 'time':\n                this.props.submission.time = e.target.value;\n                break;\n            case 'content':\n                this.props.submission.content = e.target.value;\n                break;\n            default: break;\n        }\n    }\n\n    handleEditSubmit = e => {\n        e.preventDefault();\n        this.props.editSubmission(this.props.submission);\n        sendUpdatePing(this.props.socket);\n        this.redirectHome();\n    }\n\n    redirectHome = () => {\n        let path = '/';\n        this.props.history.push(path);\n    }\n\n    render(){\n        const { submission } = this.props;\n        if(submission === undefined){\n            return(\n                <div className=\"center\"> Page Not Found </div>\n            )\n        }\n        else{\n            return(\n                <div className=\"container\">\n                    <form onSubmit={this.handleEditSubmit}  style={{backgroundColor: \"rgba(0,0,0,0)\"}}>\n                        <h5 className=\"grey-text text-darken-4 center\">Edit</h5>\n                        <div className=\"input-field\">\n                            <input type=\"text\" id=\"title\" placeholder=\"Test\" defaultValue={submission.title} onChange={this.handleChange} />\n                            <span className=\"helper-text\">Title</span>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"text\" id=\"subject\" defaultValue={submission.subject} onChange={this.handleChange} />\n                            <span className=\"helper-text\">Subject</span>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"date\" id=\"date\" defaultValue={submission.date} onChange={this.handleChange} />\n                            <span className=\"helper-text\">Date</span>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"text\" id=\"time\" defaultValue={submission.time} onChange={this.handleChange} />\n                            <span className=\"helper-text\">Time</span>\n                        </div>\n                        <div className=\"input-field\">\n                            <textarea id=\"content\" defaultValue={submission.content} className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                            <span className=\"helper-text\">Content</span>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"btn pink lighten-1 z-depth-1\">Edit Submission</button>\n                        </div>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const submission = state.submissions.find(submission => submission._id === id);\n    return{\n        submission,\n        socket: state.socket\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        editSubmission: (submission) => dispatch(editSubmission(submission))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React, { Component } from 'react';\nimport Summary from '../submissions/Summary';\nimport { connect } from 'react-redux';\nimport { deleteSubmission } from '../../store/actions/submissionActions';\nimport sendUpdatePing from '../../socket/socket';\n\nclass prevDashboard extends Component{\n\n    handleDelete = e => {\n        if(window.confirm(\"Are you sure you want to delete this?\")){\n            this.props.deleteSubmission(e.target.id);\n        }\n        sendUpdatePing(this.props.socket);\n    }\n\n    handleEdit = e => {\n        this.redirectEdit(e.target.id);\n    }\n\n    redirectEdit = id => {\n        let path = `/edit/` + id;\n        this.props.history.push(path);\n    }\n\n    componentWillUpdate(nextProps, nextState){\n        if(nextProps.submissions[0]){\n            localStorage.setItem('prevData', JSON.stringify(nextProps.submissions));\n        }\n    }\n\n    render(){\n        const { submissions } = this.props;\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"project-list section\">\n                    {submissions.map(submission => {\n                        return(\n                            <Summary onDelete={this.handleDelete} onEdit={this.handleEdit} submission={submission} key={submission._id}/>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const today = new Date(Date.now());\n    let prevSubmissions = state.submissions.filter(submission => {\n        const date = new Date(submission.date)\n        return date <= today\n    });\n    if(prevSubmissions.length === 0){\n      if(localStorage.getItem('prevData')){\n        prevSubmissions = JSON.parse(localStorage.getItem('prevData'));\n      }\n    }\n    return{\n        submissions: prevSubmissions,\n        socket: state.socket\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        deleteSubmission: (id) => dispatch(deleteSubmission(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(prevDashboard);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SideDrawer from './components/layout/SideDrawer';\nimport Backdrop from './components/layout/Backdrop';\nimport Details from './components/submissions/Details';\nimport CreateNew from './components/submissions/CreateNew';\nimport Edit from './components/submissions/Edit';\nimport prevDashboard from './components/dashboard/prevDashboard';\n\nclass App extends Component {\n    state = {\n        sideDrawerOpen: false\n    }\n    drawerToggleClickHandler = () => {\n        this.setState((prevState) => {\n            return {sideDrawerOpen : !prevState.sideDrawerOpen};\n        });\n    }\n    backdropClickHandler = () =>{\n        this.setState({sideDrawerOpen: false});\n    }\n    render() {\n        let backdrop;\n        if(this.state.sideDrawerOpen){\n            backdrop = <Backdrop click={this.backdropClickHandler} />;\n        }\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar click={this.drawerToggleClickHandler} />\n                    <Switch>\n                        <Route exact path='/' component={Dashboard} />\n                        <Route path='/submission/:id' component={Details} />\n                        <Route path='/create' component={CreateNew} />\n                        <Route path='/edit/:id' component={Edit} />\n                        <Route path='/previous' component={prevDashboard} />\n                    </Switch>\n                    <SideDrawer show={this.state.sideDrawerOpen} closeit={this.backdropClickHandler} />\n                    {backdrop}\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n// add following line in porduction version in if statement {process.env.NODE_ENV === 'production' && }\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker-custom.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then((registeration) => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n          console.log(registeration.scope);\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import socketIOClient from \"socket.io-client\";\n\nlet savedData = [];\n\nif(localStorage.getItem('data')){\n    savedData = JSON.parse(localStorage.getItem('data'));\n}\n\nconst initState = {\n    submissions: savedData,\n    loading: false,\n    //for local build\n    // socket: socketIOClient(\"http://localhost:5000\")\n    //for production build\n    socket: socketIOClient(\"https://damp-refuge-65272.herokuapp.com/\")\n}\n\nconst SubmissionReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'GET_SUBMISSION':\n            return{\n                ...state,\n                submissions: action.submission,\n                loading: false\n            }\n        case 'ADD_SUBMISSION':\n            return{\n                ...state,\n                submissions: [...state.submissions, action.submission],\n                loading: false\n            }\n        case 'DELETE_SUBMISSION':\n            let newSubmissions = state.submissions.filter(submission => {\n                return action.id !== submission._id\n            });\n            return {\n                ...state,\n                submissions: newSubmissions,\n                loading: false\n            }\n        case 'EDIT_SUBMISSION':\n            let editedSubmissions = state.submissions.filter(submission => {\n                return action.id !== submission._id\n            });\n            return {\n                ...state,\n                submissions: [editedSubmissions, action.submission],\n                loading: false\n            }\n        case 'ITEMS_LOADING':\n            return{\n                ...state,\n                loading: true\n            }\n        default:\n            console.log(\"Error in reducer\");\n            return state;\n    }\n}\n\nexport default SubmissionReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport SubmissionReducer from './store/reducers/SubmissionReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(SubmissionReducer,\n    compose(\n        applyMiddleware(thunk)\n    )\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}